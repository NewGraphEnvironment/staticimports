% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{find_internal_symbols}
\alias{find_internal_symbols}
\alias{find_internal_deps}
\title{Given a package namespace or an environment, find all internal symbols used
by each function}
\usage{
find_internal_symbols(env = "staticimports")

find_internal_deps(env = "staticimports")
}
\arguments{
\item{env}{A string naming a package, or an environment.}
}
\value{
A named list, where the name of each element is the name of each
object in \code{env}, and the value is a character vector of strings, where each
string is the name of an object in the environment.
}
\description{
\code{find_internal_symbols()} finds all the objects in the given package
namespace (or environment), then, for each function in the environment, it
finds all symbols in the function (by calling \code{\link[=find_symbols]{find_symbols()}}, and then it
filters the symbols so that only symbols referring to objects in the
environment/namespace remain.

\code{find_internal_deps()} does the same, and then for each function, it
considers each (internal) symbol as a dependency and recursively finds all
dependencies. So for a given function in the environment,
\code{find_internal_deps()} finds the internal dependencies needed for that
function.
}
\examples{
# By default, find symbols internal to the staticimports package
find_internal_symbols()

# Find all symbols internal to the utils package
find_internal_symbols("utils")

}
